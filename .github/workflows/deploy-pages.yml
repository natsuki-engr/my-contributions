name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Fetch Pull Requests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INCLUDE_OWN_PRS: "true"
          TARGET_USERNAME: ${{ github.actor }}
        run: |
          echo "🔍 Fetching PRs..."
          npm run fetch-prs
          echo "✅ PRs fetched successfully"
          echo "📁 data directory contents:"
          ls -la data/
          echo "📄 prs.json preview:"
          head -10 data/prs.json

      - name: Build application (SSG mode)
        run: |
          echo "🔨 Building application in SSG mode..."
          echo "📁 Current directory before build:"
          ls -la
          echo "📁 src directory contents:"
          ls -la src/

          npm run generate

          echo "✅ Build completed"
          echo "📁 Current directory after build:"
          ls -la
          echo "📁 dist directory contents:"
          ls -la dist/ || echo "❌ dist directory not found!"

          if [ -d "dist" ]; then
            echo "📁 dist directory structure:"
            find dist/ -type f | head -20
            echo "📄 All files in dist with details:"
            ls -la dist/
            echo "📄 HTML files in dist:"
            find dist/ -name "*.html" -type f
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Check deployment status
        run: |
          echo "🚀 Deployment completed!"
          echo "📱 Page URL: ${{ steps.deployment.outputs.page_url }}"
          echo "⏰ Deployment time: $(date)"
